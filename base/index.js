import js from '@eslint/js'
import * as tsResolver from 'eslint-import-resolver-typescript'
import importPlugin from 'eslint-plugin-import-x'

export const apply = ({
  files = ['**/*.js', '**/*.mjs', '**/*.cjs'],
  ignores = [],
  rules = {},
  tsconfigRootDir,
} = {}) => ({
  name: '@masterworks/eslint-config-masterworks-base',
  files,
  ignores,
  plugins: {
    import: importPlugin.flatConfigs.recommended.plugins['import-x'],
  },
  languageOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  settings: {
    'import-x/resolver-next': [
      tsResolver.createTypeScriptImportResolver({
        project: tsconfigRootDir ?? import.meta.dirname,
      }),
    ],
  },
  rules: {
    ...js.configs.recommended.rules,
    'accessor-pairs': 'error',
    'array-callback-return': 'error',
    'block-scoped-var': 'error',
    'class-methods-use-this': 'error',
    'consistent-return': 'error',
    'default-case-last': 'error',
    'default-case': 'error',
    'default-param-last': 'error',
    eqeqeq: ['error', 'always', { null: 'ignore' }],
    'func-name-matching': 'error',
    'func-names': ['error', 'as-needed'],
    'grouped-accessor-pairs': 'error',
    'no-alert': 'error',
    'no-array-constructor': 'error',
    'no-caller': 'error',
    'no-console': 'warn',
    'no-constructor-return': 'error',
    'no-div-regex': 'error',
    'no-duplicate-imports': 'error',
    'no-empty-function': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'off',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-loop-func': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-new': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'error',
    'no-proto': 'error',
    'no-return-assign': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-shadow': 'error',
    'no-template-curly-in-string': 'error',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unused-expressions': 'error',
    'no-unused-vars': ['error', { ignoreRestSiblings: true }],
    'no-use-before-define': ['error', { functions: false, classes: true, variables: true }],
    'no-useless-call': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': ['error', { allowAsStatement: true }],
    'object-shorthand': ['error', 'always', { avoidQuotes: true }],
    'prefer-numeric-literals': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    radix: 'error',
    'require-await': 'error',
    'symbol-description': 'error',
    'vars-on-top': 'error',
    // Import rules.
    'import/no-unresolved': 'error',
    'import/named': 'error',
    'import/namespace': 'error',
    'import/default': 'error',
    'import/export': 'error',
    'import/first': 'error',
    'import/no-absolute-path': 'error',
    'import/no-amd': 'error',
    'import/no-anonymous-default-export': 'error',
    'import/no-commonjs': 'error',
    'import/no-cycle': 'warn',
    'import/no-deprecated': 'warn',
    'import/no-duplicates': 'error',
    'import/no-dynamic-require': 'error',
    'import/no-empty-named-blocks': 'error',
    'import/no-extraneous-dependencies': 'error',
    'import/no-import-module-exports': 'error',
    'import/no-mutable-exports': 'error',
    'import/no-named-as-default-member': 'error',
    'import/no-named-as-default': 'error',
    'import/no-relative-packages': 'warn',
    'import/no-self-import': 'error',
    'import/no-useless-path-segments': 'error',
    'import/no-webpack-loader-syntax': 'error',
    // Overrides.
    ...rules,
  },
})
